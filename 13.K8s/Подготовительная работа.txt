Процесс похоже такой:
2 варианта.
1. Скачиваем файл с values и вносим туда изменения
curl https://raw.githubusercontent.com/helm/charts/master/stable/wordpress/values-production.yaml --output values-production.yaml
Потом запускаем
helm install --name habr --set "wordpressBlogName=Flant's Blog!" --set "persistence.enabled=false" -f values-production.yaml stable/wordpress
С указанием ремозитория (stable/wordpress - репозиторий stable - он по умолчанию есть в helm).
https://github.com/helm/charts/tree/master/stable - тут есть список всех приложений.
И с указанием файла с values -f values-production.yaml.
2. Вариант. Запускаем одной строкой с указанием всех параметров.
helm install sa-wordpress --set mariadb.enabled=false,externalDatabase.host=192.168.203.20,externalDatabase.user=user_db,externalDatabase.password=password,mariadb.auth.database=bitnami_wordpress,global.storageClass=nfs-client,wordpressUsername=admin,wordpressPassword=password bitnami/wordpress

helm install - команда сразу отправляет файлы в кластер.

https://bitnami.com/stack/wordpress/helm

helm install my-release azure-marketplace/wordpress
Это создаст папку my-release с helm чартом wordpress и там я в values могу изменить настройки, такие как подклчюение к базе данных
helm repo add bitnami https://charts.bitnami.com/bitnami
helm install my-release bitnami/wordpress
helm install my-release bitnami/drupal
helm install my-release bitnami/mariadb
Можно попробовать
helm install web-wordpress bitnami/wordpress
helm install web-drupal bitnami/drupal
helm install db-maridb bitnami/mariadb

Для запуска 
helm install db-maridb
helm install web-wordpress
helm install web-drupal


Надо создать сервис базы данных и базу данных в контейнере
dbinstallandcleate.yaml
---
- hosts: ubuntu
  vars:
    app_packages:
      - mariadb-server
      - mariadb-client
      - python3-pymysql
      - python3-mysqldb
    db_name: "bitnami_wordpress"
    db_user: "user_db"
    db_pass: "pass_db"
  pre_tasks:
  - name: Prepare. Install packages
    apt:
      name: "curl"
      state: latest
      update_cache: yes
  tasks:
  - name: Add MariaDB repos
    shell: |
      curl -LsS -O https://downloads.mariadb.com/MariaDB/mariadb_repo_setup
      bash mariadb_repo_setup --mariadb-server-version=10.6
  - name: MySQL. Install packages
    apt:
      name: "{{ app_packages }}"
      state: latest
      update_cache: yes
    environment:
      DEBIAN_FRONTEND: noninteractive
  - name: MySQL. add bind-address
    ini_file:
      dest: /etc/mysql/my.cnf
      section: mysqld
      option: "bind-address"
      value: "{{ ansible_host }}"

  - name: restart mysql if necessary
    command: service mysql restart

  - mysql_db:
      name: "{{ db_name }}"
      state: absent
      login_unix_socket: /var/run/mysqld/mysqld.sock

  - mysql_db:
      name: "{{ db_name }}"
      encoding: utf8
      login_unix_socket: /var/run/mysqld/mysqld.sock

  - mysql_user:
      name: "{{ db_user }}"
      host: "%"
      password: "{{ db_pass }}"
      priv: "{{ db_name }}.*:ALL"
      login_unix_socket: /var/run/mysqld/mysqld.sock
    no_log: yes
	
	
потом можно устанавливать приложение, и подключать его к базе данных
~ ansible-playbook -i inventory.yaml dbinstallandcleate.yaml
~ helm install sa-wordpress --set mariadb.enabled=false,externalDatabase.host=192.168.203.8,externalDatabase.user=user_db,externalDatabase.password=pass_db,mariadb.auth.database=bitnami_wordpress,global.storageClass=nfs-client,wordpressUsername=admin,wordpressPassword=password bitnami/wordpress

~ ansible-playbook -i inventory.yaml dbinstallandcleate.yaml
~ helm install sa-drupal  --set mariadb.enabled=false,externalDatabase.host=192.168.203.8,externalDatabase.user=user_db,externalDatabase

Drupal
user
password
kubectl get secret --namespace default my-wordpress -o jsonpath="{.data.wordpress-password}" | base64 -d

Wordpress
Пароль: hDbv1tGHKmt8dop^Cz

ПОдстава
Installation failed: Не удалось создать директорию. /opt/bitnami/wordpress/wp-content/themes/hello-elementor/
