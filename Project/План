Цель: установить в Kubernetes кластер (K8s или K3s) комплекс ПО Nextcloud, который включает: Веб-сервер, сервер баз данных, кэширующий сервер
Цель: разворачивать у потенциальных клиентов Nextcloud с гарантированным результатом и минимальными трудозатратами (максимальная автоматизация).

Минимальные требования для клиента:
1 виртуальная машина под Kubernetes кластер (тут не будет ценных данных, поэтому можно легко менять версии или переустанавливать). 4 ядра, 8Гб оперативной памяти.
1 виртуальная машина под NFS хранилище. (желательно с диском SSD для базы данных и HDD для файлов пользователей). Системные требования 1 ядро, 800Мб оперативной памяти.

Процесс установки автоматизирован. С помощью Ansible настраиваем кластер и отдельную виртуальную машину для NFS хранилища. Устаналиваем на кластер ArgoCD для изменения вверсионности.

Нашел несколько ссылок на репозиторий Helm.
https://github.com/nextcloud/helm
https://nextcloud.github.io/helm/
https://artifacthub.io/packages/helm/nextcloud/nextcloud

Примеры:
https://blog.true-kubernetes.com/self-host-nextcloud-using-kubernetes/
*оказываетсья надо генерировать самостоятельно пароли при деплое, а не прописывать их в конифигурационные файлы.
https://www.youtube.com/watch?v=USS3DZn2te8

kubectl get nodes
kubectl version --short
kubectl get nc
kubectl get all -n nginx-ingress
kubectl get all -n cert-manager
helm search nectcloud (у меня не отрабоала, может из-за двух репозиториях?)
helm search repo nextcloud
helm inspect values stable/nextcloud > /tmp/nextcloud.values
helm install stable/nextcloud --values /tmp/nextcloud.values --name nextcloud
kubectl get all
git clone https://github.com/justmeandopensource/kubernetes
cd yamls
ls
nano ingress-resource.yaml
kubectl create -f ingress-resource.yaml
kubectl get ingress
kubectl get pods -o wide
kubectl describe ing ingress-resource

Скачиваем файл с Values (https://github.com/nextcloud/helm/blob/master/charts/nextcloud/values.yaml) и можно для разных версий изменять настройки (колличество реплик, база данных mariadb или postgresql, кэширующий сервер (apcu), ресурсы)

План такой:
1) Готовивим NFS хранилище
запускаем на заранее подготовленную и запущенную виртуальную машину скриптом ansible устаноку NFS сервера
2) Готовим K8s кластер, минимально из одного сервера
запускаем ansible скрипт, который развернет на сервере(ах) k8s кластер и скопирует нам файл для управления (либо под каждый проект создаем vagrant машину, готовим её (ставим все интсрументы) и после запускаеться ansible playbook, который раскатывает на наших серверах (нужны адреса, учетные данные) k8s кслатер и все остальное..)
wget забираем из нашего репозитория мой yaml манифест (helm). Вношу в нем правки для контертного клиента, и раскатываю все сервисы.
