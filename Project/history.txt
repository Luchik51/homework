 1025  ansible-inventory -i inventory.yaml --graph
 1026  ansible -i inventory.yaml -m ping all_workers -u root
 1027  ansible -i inventory.yaml -m ping all_workers -u root 
 1028  ansible -i inventory.yaml -m ping all_workers -u root --ask-vault-pass
 1029  ansible-vault edit  group_vars/all_workers/vault.yaml
 1030  ansible-vault create group_vars/all_workers/vault.yaml
 1031  ansible -i inv.yaml -m shell -a "cat /root/.ssh/authorized_keys" all_workers -u root
 1032  ansible -i inventory.yaml -m shell -a "cat /root/.ssh/authorized_keys" all_workers -u root
 1033  ansible -i inventory.yaml -m зштп  all_workers -u root
 1034  ansible -i inventory.yaml -m ping  all_workers -u root
 1035  ssh jump_sa@178.124.206.53 
 1036  ansible-inventory -i inventory.yaml --graph
 1037  ansible -i inventory.yaml -m shell -a "yum install nginx" host19 -u root
 1038  ansible -i inventory.yaml -m shell -a "yum install nginx" --host=host19 -u root
 1039  ansible -i inventory.yaml -m shell -a "yum install nginx" all_workers -u root
 1040  k9s
 1041  cp $HOME/.kube/config $HOME/.kube/config.backup.$(date +%Y-%m-%d.%H:%M:%S)
 1042  KUBECONFIG= $HOME/.kube/config:file2: kubectl config view --merge --flatten > ~/.kube/merged_kubeconfig && mv ~/.kube/merged_kubeconfig ~/.kube/config
 1043  kubectl get nodes
 1044  ssh -o ProxyCommand="ssh -W %h:%p -q jump_sa@178.124.206.53" -L 6443:127.0.0.1:6443 root@192.168.203.20 -f -N
 1045  kubectl get nodes
 1046  k9s
 1047  vagrant up
 1048  docker
 1049  vagrant destroy -f
 1050  vagrant ssh
 1051  git status
 1052  git add --all
 1053  git commit -m "10.k8s"
 1054  git push origin_github --all
 1055  vagrant up
 1056  vagrant destroy -f
 1057  ssh jump_sa@178.124.206.53
 1058  history
 1059  ansible -i inventory.yaml -m shell -a "apt install nginx" all_workers -u root
 1060  ansible -i inventory.yaml -m authorized_key -a "key=\"{{lookup('file','~/.ssh/id_rsa.pub')}}\" " all_workers --ask-pass
 1061  ansible -i inventory.yaml -m authorized_key -a "key=\"{{lookup('file','~/.ssh/id_rsa.pub')}}\" user=root" all_workers --ask-pass
 1062  ansible -i inventory.yaml -m ping all_workers -u root --ask-pass
 1063  ansible -i inventory.yaml -m authorized_key -a "key=\"{{lookup('file','~/.ssh/id_rsa.pub')}}\" user=root" all_workers -u root --ask-pass
 1064  ansible -i inventory.yaml -m shell -a "sudo apt install nginx"  all_workers -u root
 1065  ansible -i inventory.yaml -m shell -a "apt install nginx"  all_workers -u root
 1066  ansible -i inventory.yaml -m command -a "apt install nginx"  all_workers -u root
 1067  ansible -i inventory.yaml shell -a "free -m"  all_workers -u root
 1068  ansible all shell -a "free -m"  -u root
 1069  ansible -i inventory.yaml shell -a "free -m"  all_workers user=root
 1070  ansible -i inventory.yaml -m shell -a "free -m"  all_workers user=root
 1071  ansible -i inventory.yaml -m ping all_workers -u root --ask-pass
 1072  ansible -i inventory.yaml -m ping all_workers -u root
 1073  ansible -i inventory.yaml -m shell -a uptime all_workers -u root
 1074  ansible -i inventory.yaml -m shell -a "uptime" all_workers -u root
 1075  ansible -i inventory.yaml -m shell -a "free -m" all_workers -u root
 1076  ansible -i inventory.yaml -m shell -a "apt install nginx" all_workers -u root
 1077  ansible -i inventory.yaml -m shell -a "apt install nginx" -b  all_workers -u root
 1078  ansible -i inventory.yaml -m shell -a "uptime" all_workers -u root
 1079  ansible -i inventory.yaml -m shell -a "uptime" host20 -u root
 1080  ansible -i inventory.yaml -m shell -a "uptime" host19 -u root
 1081  ansible -i inventory.yaml -m shell -a "apt install nginx" -b host20 -u root
 1082  ansible -i inventory.yaml -m shell -a "apt update" -b host20 -u root
 1083  ansible -i inventory.yaml -m shell -a "apt install nginx" -b host20 -u root
 1084  ansible -i inventory.yaml -m shell -a "apt upgrade" -b host20 -u root
 1085  ansible -i inventory.yaml -m shell -a "apt upgrade -yqq" -b host20 -u root
 1086  ansible -i inventory.yaml -m shell -a "apt install nginx -y" -b host20 -u root
 1087  ansible -i inventory.yaml -m shell -a "yum install nginx -y" -b host19 -u root
 1088  ansible -i inventory.yaml -m shell -a "apt install nginx -y" -b host20 -u root
 1089  history >> README.md
 1090  cd ../../
 1091  update_all_git.sh 06.Ansible.Start
 1092  ls
 1093  cd Homework/
 1094  update_all_git.sh 06.Ansible.Start
 1095  l;s
 1096  ls
 1097  update_all_git.sh
 1098  chmod +x update_all_git.sh 
 1099  ls -l
 1100  update_all_git.sh
 1101  ./update_all_git.sh 06.Ansible.Start
 1102  git remote -v
 1103  ssh jump_sa@178.124.206.53
 1104  ./update_all_git.sh 10.k8s_update
 1105  cd ../../
 1106  cd Git/sa.it-academy.by/sa.it-academy.by/
 1107  cd Andrei_Luchanok/
 1108  git status
 1109  git add --all
 1110  git commit -m "10.k8s"
 1111  git push
 1112  ping crm2.factor-ltd.com
 1113  netcat
 1114  curl -o primary.by
 1115  curl -o https://primary.by
 1116  curl -o https:\\primary.by
 1117  curl http://primary.by
 1118  curl http://primary-jwt.by
 1119  curl -o http://primary-jwt.by
 1120  curl -o https://primary-jwt.by
 1121  curl https://primary-jwt.by
 1122  curl https://primary-jwt.by | head
 1123  curl https://primary-jwt.by | head 50
 1124  curl https://primary-jwt.by | less
 1125  nslookup primary-jwt.by
 1126  traceroute 93.84.119.243
 1127  curl http://primary.by
 1128  ping crm2.factor-ltd.com
 1129  nmap 192.168.37.5
 1130  ping 88.198.100.157
 1131  ping a- 88.198.100.157
 1132  ping -a 88.198.100.157
 1133  ping ajoure.factor-ltd.org
 1134  nano README.md
 1135  git add --all
 1136  git commit -m "04.Git.Ops test1"
 1137  git pull
 1138  git pull origin_github 
 1139  git push origin_github 
 1140  ping 192.168.100.1
 1141  ping 192.168.100.6
 1142  ping 192.168.100.1
 1143  ping 192.168.100.2
 1144  ping 192.168.100.4
 1145  ping 192.168.100.5
 1146  cd /tmp/
 1147  git clone https://github.com/tmux/tmux.git
 1148  cd tmux
 1149  sh autogen.sh
 1150  ./configure && make
 1151  sh autogen.sh
 1152  ./configure && make
 1153  tmux
 1154  sudo apt  install tmux
 1155  tmux
 1156  git add --all
 1157  git commit -m "12.K8s.Deploy"
 1158  git push
 1159  nano ~/.bashrc
 1160  sudo uu
 1161  uu
 1162  alias c='clear'
 1163  c
 1164  alias
 1165  ka
 1166  cd ~/Yandex.Disk/it-academy/Git/Homework/12.k8s.Deploy/
 1167  ks
 1168  ka app.yaml 
 1169  git status
 1170  git add --all
 1171  git commit -m "11.K8s.Install"
 1172  git push
 1173  mkdir 12.k8s.Deploy
 1174  cd 12.k8s.Deploy/
 1175  history | grep ssh -o ProxyCommand=
 1176  history
 1177  ssh -o ProxyCommand="ssh -W %h:%p -q jump_sa@178.124.206.53" -L 6443:127.0.0.1:6443 root@192.168.203.20 -f -N
 1178  k9s
 1179  nano app.yaml
 1180  nano deploy_rolling.yaml
 1181  nano nginx-controller.yaml
 1182  nano pods_exec.yaml
 1183  nano pods_live.yaml
 1184  kubectl apply -f pods_live.yaml
 1185  kubectl logs pod-exec
 1186  kubectl logs liveness-exec
 1187  kubectl delete -f pods_live.yaml
 1188  kubectl apply -f pods_exec.yaml 
 1189  kubectl logs pod-exec
 1190  kubectl delete -f pods_exec.yaml 
 1191  kubectl apply -f pods_live.yaml 
 1192  kubectl logs liveness-exec
 1193  kubectl describe pod liveness-exec
 1194  kubectl delete -f pods_live.yaml
 1195  kubectl apply -f app.yaml
 1196  kubectl exec webserver-8449985678-mlppf -it -- bash
 1197  kubectl apply -f nginx-controller.yaml
 1198  kubectl apply -f app.yaml
 1199  nano /etc/hosts
 1200  sudo nano /etc/hosts
 1201  kubectl apply -f app.yaml
 1202  kubectl exec webserver-6c959f8967-vgg64 
 1203  kubectl exec webserver-6c959f8967-6kwnj 
 1204  kubectl apply -f app.yaml
 1205  kubectl exec webserver-6c959f8967-6kwnj 
 1206  kubectl exec webserver-6c959f8967-6
 1207  kubectl exec webserver-6c959f8967-6kwnj
 1208  kubectl exec webserver-6c959f8967-6kwnj 
 1209  kubectl apply -f app.yaml
 1210  cd ../
 1211  .
 1212  ./update_all_git.sh 12.K8s.Deploy
 1213  cd 12.k8s.Deploy/
 1214  k apply -f app.yaml
 1215  cd ../11.k8s.install/
 1216  echo "alias uu='sudo apt-get update && sudo apt-get upgrade -y'" >>~/.bashrc
 1217  tail ~/.bashrc
 1218  echo "alias kaf='kubectl apply -f'" >>~/.bashrc
 1219  kaf ../12.k8s.Deploy/app.yaml 
 1220  tail ~/.bashrc
 1221  kaf
 1222  ka
 1223  sudo nano ~/.bashrc
 1224  ka
 1225  sudo nano ~/.bashrc
 1226  alias
 1227  ka ../12.k8s.Deploy/app.yaml 
 1228  ka
 1229  cd ../../
 1230  cd Homework/
 1231  ./update_all_git.sh 11.K8s.Install
 1232  nano .gitignore
 1233  ./update_all_git.sh add_gitignore
 1234  vagrant up
 1235  vagrant destory -f
 1236  vagrant up
 1237  vagrant ssh
 1238  vagrant halt
 1239  sudo nano ~/.kube/config
 1240  vagrant up
 1241  vagrant ssh
 1242  ping 192.168.56.213
 1243  scp  vagrant@192.168.56.213:/etc/rancher/k3s/k3s.yaml ~/.kube/config2
 1244  kubectl get nodes
 1245  kubectl --context default get nodes
 1246  vagrant ssh
 1247  kubectl --context default get nodes
 1248  ping 10.43.0.1
 1249  ping 10.0.2.15
 1250  vagrant halt
 1251  vagrant up
 1252  kubectl --context default get nodes
 1253  kubectl --context cluster.local get nodes
 1254  kubectl get nodes
 1255  kubectl config use-context default-system
 1256  kubectl config current-context
 1257  kubectl --context kubernetes-admin@cluster.local get nodes
 1258  kubectl --context default get nodes
 1259  k9s
 1260  vagrant halt
 1261  split-window
 1262  ping 192.168.1.154
 1263  ping 192.168.88.33
 1264  nmap 192.168.88.33
 1265  nmap -Pn 192.168.88.33
 1266  nmap -Pn 192.168.88.71
 1267  ping 192.168.1.131
 1268  ping 192.168.1.137
 1269  ping 192.168.1.131
 1270  ping 192.168.1.6
 1271  ping 192.168.1.5
 1272  ping 192.168.1.1
 1273  ping 192.168.37.2
 1274  k9s
 1275  ping 192.168.88.8
 1276  ping 192.168.88.1
 1277  ping 192.168.88.27
 1278  ping 192.168.88.29
 1279  ping 192.168.88.27
 1280  ping 192.168.88.29
 1281  ping 192.168.88.43
 1282  nano sealed_secret.yaml
 1283  nano new_sealed_secret.yaml
 1284  nano joomla_ingress.yaml
 1285  nano init_secret.yaml
 1286  nano index.yaml
 1287  nano app.yaml
 1288  history
 1289  ssh -o ProxyCommand="ssh -W %h:%p -q jump_sa@178.124.206.53" -L 6443:127.0.0.1:6443 root@192.168.203.20 -f -N
 1290  wget https://github.com/bitnami-labs/sealed-secrets/releases/download/v0.18.1/kubeseal-0.18.1-linux-amd64.tar.gz
 1291  tar -zxvf kubeseal-0.18.1-linux-amd64.tar.gz
 1292  sudo mv kubeseal /usr/local/bin
 1293  rm kubeseal-0.18.1-linux-amd64.tar.gz
 1294  rm LICENSE README.md
 1295  kubeseal --version
 1296  cat init_secret.yaml | kubeseal --format yaml > sealed_secret.yaml
 1297  kubectl apply -f https://github.com/bitnami-labs/sealed-secrets/releases/download/v0.18.1/controller.yaml
 1298  cat init_secret.yaml | kubeseal --format yaml > sealed_secret.yaml
 1299  kubectl apply -f app.yaml
 1300  kubectl apply -f sealed_secret.yaml
 1301  kubeseal --format yaml < init_secret.yaml > new_sealed_secret.yaml
 1302  cat init_secret.yaml | kubeseal --format yaml > sealed_secret.yaml
 1303  kubectl apply -f sealed_secret.yaml
 1304  wget https://get.helm.sh/helm-v3.9.4-linux-amd64.tar.gz
 1305  tar -zxvf helm-v3.9.4-linux-amd64.tar.gz
 1306  sudo mv linux-amd64/helm /usr/local/bin
 1307  rm -rf linux-amd64/
 1308  rm helm-v3.9.4-linux-amd64.tar.gz
 1309  helm version
 1310  helm create first-app
 1311  helm package first-app
 1312  nano first-app/templates/pv.yaml
 1313  nano first-app/templates/pvc.yaml
 1314  git add --all
 1315  git commit -m "Add PV and PVC"
 1316  git push
 1317  git push origin_github 
 1318  helm uninstall fist-app
 1319  helm repo add bitnami https://charts.bitnami.com/bitnami
 1320  helm repo update
 1321  helm search repo app -l
 1322  helm repo add nfs-subdir-external-provisioner https://kubernetes-sigs.github.io/nfs-subdir-external-provisioner
 1323  helm repo update
 1324  helm install nfs-subdir-external-provisioner nfs-subdir-external-provisioner/nfs-subdir-external-provisioner     --set nfs.server=192.168.37.105 --set nfs.path=/mnt/IT-Academy/nfs-data/sa2-21-22/
 1325  kubectl apply -f mariadb.yaml 
 1326  kubectl apply -f joomla_ingress.yaml 
 1327  kubectl apply -f mariadb.yaml --validate=false
 1328  kubectl apply -f mariadb.yaml 
 1329  git add --all
 1330  git commit -m "github action test1"
 1331  git push origin_github 
 1332  git add --all
 1333  git commit -m "github action test2"
 1334  git push origin_github 
 1335  git add --all
 1336  git commit -m "github action test3"
 1337  git push origin_github 
 1338  history
 1339  ssh -o ProxyCommand="ssh -W %h:%p -q jump_sa@178.124.206.53" -L 6443:127.0.0.1:6443 root@192.168.203.20 -f -N
 1340  nano Dockerfile
 1341  docker build -t jfrog.it-academy.by/public/jenkins-ci:luchik .
 1342  sudo apt  install docker.io 
 1343  docker build -t jfrog.it-academy.by/public/jenkins-ci:luchik .
 1344  sudo apt-get remove docker docker-engine docker.io containerd runc
 1345  sudo docker build -t jfrog.it-academy.by/public/jenkins-ci:luchik .
 1346  nano Dockerfile
 1347  sudo docker build -t jfrog.it-academy.by/public/jenkins-ci:luchik .
 1348  sudo usermod -aG docker $USER 
 1349  docker login jfrog.it-academy.by
 1350  sudo apt-get remove docker docker-engine docker.io containerd runc
 1351  sudo apt-get update
 1352  sudo apt-get install     ca-certificates     curl     gnupg     lsb-release
 1353  echo   "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
 1354  sudo apt-get update
 1355  sudo mkdir -p /etc/apt/keyrings
 1356  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
 1357  sudo apt-get update
 1358  echo   "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu 
 1359  echo   "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin
 1360  sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin
 1361  sudo usermod -aG docker $USER
 1362  docker version
 1363  sudo docker version
 1364  sudo docker login jfrog.it-academy.by
 1365  docker push jfrog.it-academy.by/public/jenkins-ci:luchik
 1366  sudo docker push jfrog.it-academy.by/public/jenkins-ci:luchik
 1367  kubectl get nodes
 1368  kubectl get namespaces 
 1369  mkdir -p /mnt/test/sa2-21-22/luchik/jenkins
 1370  k9s
 1371  exit
 1372  systemctl start docker
 1373  gpasswd -a $USER docker
 1374  sudo gpasswd -a $USER docker
 1375  sudo docker push jfrog.it-academy.by/public/jenkins-ci:luchik
 1376  nano jenkins.yaml
 1377  ssh root@192.168.203.19
 1378  ssh root@192.168.203.20
 1379  nano jenkins.yaml
 1380  kubectl apply -f jenkins.yaml 
 1381  nano jenkins.yaml
 1382  kubectl 
 1383  nano jenkins.yaml
 1384  kubectl apply -f jenkins.yaml 
 1385  kubectl delete -f  jenkins.yaml 
 1386  kubectl apply -f jenkins.yaml 
 1387  `wget https://github.com/kubernetes-sigs/metrics-server/releases/latest/download/components.yaml -O ms.yaml`
 1388  kubectl apply -f ms.yaml 
 1389  kubectl delete -f ms.yaml 
 1390  kubectl apply -f ms.yaml 
 1391  kubectl delete -f  jenkins.yaml 
 1392  kubectl apply -f jenkins.yaml 
 1393  wget https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml -o argocd.yaml
 1394  history
 1395  `wget https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml -O argocd.yaml`
 1396  kubectl apply -f argocd.yaml 
 1397  kubectl delete -f argocd.yaml 
 1398  kubectl delete -f argocd.yaml -n argocd
 1399  kubectl apply -f argocd.yaml -n argocd
 1400  kubectl create namespace argocd
 1401  kubectl apply -f argocd.yaml -n argocd
 1402  kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d
 1403  git add --all
 1404  git commit -m "ci-cd folder"
 1405  git push origin_github 
 1406  git push origin_gitlab 
 1407  exit
 1408  k9s
 1409  k9s --headness
 1410  k9s
 1411  kubectl get service -o wide
 1412  kubectl get pods -n namespace | egrep -i 'Terminated|Evicted'
 1413  nano /etc/hosts
 1414  nano /etc/hosts
 1415  sudo nano /etc/hosts
 1416  exit
 1417  history
 1418  ssh -o ProxyCommand="ssh -W %h:%p -q jump_sa@178.124.206.53" -L 6443:127.0.0.1:6443 root@192.168.203.20 -f -N
 1419  helm create first-app
 1420  helm install fist-app  --version v0.2.0
 1421  kubectl get pv
 1422  kubectl get pvc
 1423  helm search repo stable
 1424  helm repo add google  https://kubernetes-charts.storage.googleapis.com/
 1425  helm repo add stable https://charts.helm.sh/stable
 1426  helm search repo stable
 1427  helm repo update
 1428  k9s
 1429  sudo snap update
 1430  sudo snap help
 1431  sudo snap list
 1432  sudo snap refresh
 1433  exit
 1434  history | grep ssh
 1435  ssh -o ProxyCommand="ssh -W %h:%p -q jump_sa@178.124.206.53" -L 6443:127.0.0.1:6443 root@192.168.203.20 -f -N
 1436  nano prometheus.yaml
 1437  kubectl apply -f prometheus.yaml 
 1438  kubectl create namespace monitoring
 1439  kubectl apply -f prometheus.yaml 
 1440  nano node-exporter.yaml
 1441  kubectl apply -f node-exporter.yaml 
 1442  nano grafana.yaml
 1443  kubectl apply -f grafana.yaml 
 1444  nano ksm.yaml
 1445  kubectl apply -f ksm.yaml 
 1446  sudo nano /etc/hosts
 1447  kubectl apply -f grafana.yaml 
 1448  nano alertmanager.yaml
 1449  history | grep ssh
 1450  ssh -o ProxyCommand="ssh -W %h:%p -q jump_sa@178.124.206.53" -L 6443:127.0.0.1:6443 root@192.168.203.20 -f -N
 1451  kubectl apply -f alertmanager.yaml 
 1452  git checkout md-sa2-21-22 
 1453  git log --oneline | less 
 1454  git log --oneline
 1455  git log --oneline -5 
 1456  git reset --hard HEAD~1  
 1457  ls -l Andrei_Luchanok/ 
 1458  git add --all
 1459  ls -l
 1460  cd Andrei_Luchanok/
 1461  ls -l
 1462  git commit -m "Remove secret"
 1463  git push origin -f 
 1464  ping kanpol.by
 1465  ping canpolbabies.by
 1466  ping 192.168.37.1
 1467  ping 10.1.1.101
 1468  ping 10.1.1.100
 1469  ping 8.8.8.8
 1470  ping 192.168.37.1
 1471  nslookup ya,ru
 1472  nslookup ya.ru
 1473  ping onliner.by
 1474  ping mail.ru
 1475  git status
 1476  cd ../
 1477  git status
 1478  git add --all
 1479  git commit -m "04.GitOps"
 1480  git push
 1481  git status
 1482  ls -l
 1483  update_all_git.sh "04.Gitops"
 1484  ./update_all_git.sh 04.GitOps_test1
 1485  git push
 1486  git push origin_github 
 1487  git add --all
 1488  git commit -m "04.GitOPS test6"
 1489  git pull
 1490  git pull origin_github 
 1491  git push origin_github 
 1492  git status
 1493  git add --all
 1494  git commit -m "10.k8s and 11.k8s"
 1495  git commit -a
 1496  git status
 1497  ls
 1498  git push --all
 1499  git push origin_github 
 1500  git push -f origin_github 
 1501  git add -all
 1502  git add --all
 1503  git commit -m "04.GitOPS test7"
 1504  git push origin_github 
 1505  git add --all
 1506  git commit -m "04.GitOPS test8"
 1507  git push origin_github 
 1508  git add --all
 1509  git commit -m "04.GitOPS test9"
 1510  git push origin_github 
 1511  cd .github/workflows/
 1512  nano testfile.txt 
 1513  git add --all
 1514  git commit -m "04.GitOPS test10"
 1515  git push origin_github 
 1516  git add --all
 1517  git commit -m "04.GitOPS off"
 1518  git push origin_github 
 1519  history | grep ssh
 1520  ssh -o ProxyCommand="ssh -W %h:%p -q jump_sa@178.124.206.53" -L 6443:127.0.0.1:6443 root@192.168.203.20 -f -N
 1521  ansible -i inventory.yaml -m ping all_workers -u root
 1522  ansible -i inventory.yaml -m authorized_key -a "key=\"{{lookup('file','~/.ssh/id_rsa.pub')}}\" user=root" all_workers -u root --ask-pass
 1523  ansible -i inventory.yaml -m ping all_workers -u root
 1524  ansible -i inventory.yaml -m shell -a "apt install nginx -y" -b host20 -u root
 1525  ansible -i inventory.yaml -m shell -a "apt install nginx -y" -b host19 -u root
 1526  ansible -i inventory.yaml -m ping -b host19 -u root
 1527  ansible -i inventory.yaml -m ping all_workers -u root
 1528  ssh -o ProxyCommand="ssh -W %h:%p -q jump_sa@178.124.206.53" -L 6443:127.0.0.1:6443 root@192.168.203.20 -f -N
 1529  ansible -i inventory.yaml -m ping all_workers -u root
 1530  ansible -i inventory.yaml -m ping -b host19 -u root
 1531  ansible -i inventory.yaml -m shell -a "apt install nginx -y" -b host19 -u root
 1532  ansible -i inventory.yaml -m nx -y" -b host19 -u root
 1533  ansible -i inventory.yaml -m copy -a 'src=/html dest=/usr/share/nginx/html/' all_workers -u root
 1534  ansible -i inventory.yaml -m copy -a 'src=./' all_workers -u root
 1535  ansible -i inventory.yaml -m shell -a 'echo "uname -n">>/usr/share/nginx/html/index.html' all_workers -u root
 1536  ssh -o ProxyCommand="ssh -W %h:%p -q jump_sa@178.124.206.53" -L 8019:127.0.0.1:80 root@192.168.202.19 -f -N
 1537  ssh -o ProxyCommand="ssh -W %h:%p -q jump_sa@178.124.206.53" -L 8020:127.0.0.1:80 root@192.168.202.20 -f -N
 1538  ansible -i inventory.yaml -m shell -a 'systemctl restart nginx' all_workers -u root
 1539  ansible -i inventory.yaml -m copy -a 'src=./html/index.html dest=/usr/share/nginx/html/index.html' all_workers -u root
 1540  ansible -i inventory.yaml -m shell -a 'uname -n>>/usr/share/nginx/html/index.html' all_workers -u root
 1541  ansible -i inventory.yaml -m shell -a 'systemctl restart nginx' all_workers -u root
 1542  ansible -i inventory.yaml -m copy -a 'src=./html/index.html dest=/usr/share/nginx/html/index.html' all_workers -u root
 1543  ansible -i inventory.yaml -m shell -a 'uname -n>>/usr/share/nginx/html/index.html' all_workers -u root
 1544  ansible -i inventory.yaml -m shell -a 'systemctl restart nginx' all_workers -u root
 1545  ansible -i inventory.yaml -m copy -a 'src=./html/index.html dest=/usr/share/nginx/html/index.html' all_workers -u root
 1546  ansible -i inventory.yaml -m shell -a 'uname -n>>/usr/share/nginx/html/index.html' all_workers -u root
 1547  ansible -i inventory.yaml -m shell -a 'systemctl restart nginx' all_workers -u root
 1548  ansible -i inventory.yaml -m copy -a 'src=./html/index.html dest=/usr/share/nginx/html/index.html' -b host19 -u root
 1549  ansible -i inventory.yaml -m copy -a 'src=./html/index.html dest=/var/www/html/index.html' -b host20 -u root
 1550  ansible -i inventory.yaml -m shell -a 'uname -n>>/usr/share/nginx/html/index.html'  -b host19 -u root
 1551  ansible -i inventory.yaml -m shell -a 'uname -n>>/var/www/html/index.html'  -b host20 -u root
 1552  ansible -i inventory.yaml -m shell -a 'systemctl restart nginx' all_workers -u root
 1553  history > history.txt
 1554  git status
 1555  git add --all
 1556  git commit -m "06.Ansible.Start"
 1557  git push -f origin_github 
 1558  git add --all
 1559  git commit -m "06.Ansible.Start"
 1560  git push
 1561  nmap 192.168.37.0
 1562  nmap -Pn 192.168.37.0
 1563  sudo add-apt-repository ppa:wireshark-dev/stable
 1564  sudo apt-get update
 1565  sudo apt-get install wireshark
 1566  sudo wireshark
 1567  ansible -i inventory.yaml -m ping all_workers -u root --ask-pass
 1568  ansible -i inventory.yaml -m ping all_workers -u root
 1569  ping 192.168.202.19
 1570  ansible -i inventory.yaml -m ping all_workers -u root
 1571  wget -o 192.168.202.19
 1572  wget -0 192.168.202.19
 1573  wget  192.168.202.19
 1574  ssh jump_sa@178.124.206.53
 1575  git clone https://github.com/pluhin/sa.it-academy.by/tree/md-sa2-21-22/demo/07.Ansible
 1576  git clone https://github.com/pluhin/sa.it-academy.by/tree/md-sa2-21-22/demo/07.Ansible  --single-branch
 1577  ansible-playbook -i inventory.yaml web.yaml
 1578  ansible-playbook -i inventory.yaml web.yaml --ask-vault-pass
 1579  ansible-playbook -i inventory.yaml web.yaml -u root --ask-pass
 1580  ansible -i inventory.yaml -m shell -a 'systemctl stop nginx' all_workers -u root
 1581  ansible -i inventory.yaml -m shell -a 'systemctl restart apache2' all_workers -u root
 1582  ansible -i inventory.yaml -m shell -a 'systemctl restart httpd' all_workers -u root
 1583  ansible-playbook -i inventory.yaml web.yaml -u root --ask-pass
 1584  ansible-playbook -i inventory.yaml nginx.yaml -u root --ask-pass
 1585  sudo apt install ppa-purge && sudo ppa-purge ppa:remmina-ppa-team/remmina
 1586  sudo apt install ppa-purge && sudo ppa-purge ppa:remmina-ppa-team*
 1587  nmap 192.168.100.0
 1588  nmap 192.168.100.0/4
 1589  nmap 192.168.100.0/24
 1590  nmap 192.168.100.1-192.168.100.10
 1591  ping 192.168.100.1
 1592  ping 192.168.100.2
 1593  ping 192.168.100.3
 1594  ping 192.168.100.4
 1595  nmap 10.1.1.0/24 -p 80
 1596  nmap -sn 10.1.1.0/24 -p 80
 1597  nmap 10.1.1.0/24 -p 80 --open
 1598  nmap 10.1.1.127
 1599  nmap 10.1.1.126
 1600  ping 192.168.88.29
 1601  ping 192.168.88.27
 1602  ip a
 1603  ping extranet.factor-ltd.org
 1604  nmap 10.1.1.103
 1605  traceroute 192.168.100.2
 1606  nmap 10.1.1.0/24 -p 80 --open
 1607  ping 	
 1608  cloud.of.by
 1609  ping cloud.of.by
 1610  ssh jump_sa@178.124.206.53
 1611  exit
 1612  history | grep ssh
 1613  ssh -o ProxyCommand="ssh -W %h:%p -q jump_sa@178.124.206.53" -L 8020:127.0.0.1:80 root@192.168.202.20 -f -N
 1614  history | grep -m ping
 1615  history | grep ping
 1616  ansible -i inventory.yaml -m ping all_workers -u root --ask-pass
 1617  ansible -i inventory.yaml -m ping all_workers -u root
 1618  history | grep ancible
 1619  history | grep ansible
 1620  ansible -i inventory.yaml nginx.yaml -u root
 1621  ansible-playbook -i inventory.yaml nginx.yaml -u root
 1622  ssh -o ProxyCommand="ssh -W %h:%p -q jump_sa@178.124.206.53" -L 8019:127.0.0.1:80 root@192.168.202.19 -f -N
 1623  ssh -o ProxyCommand="ssh -W %h:%p -q jump_sa@178.124.206.53" -L 8019:127.0.0.1:80 root@192.168.202.20 -f -N
 1624  ssh -o ProxyCommand="ssh -W %h:%p -q jump_sa@178.124.206.53" -L 8020:127.0.0.1:80 root@192.168.202.20 -f -N
 1625  kill ssh
 1626  kill -name ssh
 1627  kill --help
 1628  kill -n ssh
 1629  top
 1630  kill 16007-16017
 1631  kill 16007
 1632  kill 16008
 1633  kill 16010
 1634  kill 16016
 1635  kill 16017
 1636  kill 16011
 1637  ssh -o ProxyCommand="ssh -W %h:%p -q jump_sa@178.124.206.53" -L 8019:127.0.0.1:80 root@192.168.202.19 -f -N
 1638  ssh -o ProxyCommand="ssh -W %h:%p -q jump_sa@178.124.206.53" -L 8020:127.0.0.1:80 root@192.168.202.20 -f -N
 1639  ps axu | grep ssh
 1640  killall ssh
 1641  ps axu | grep ssh
 1642  ssh -o ProxyCommand="ssh -W %h:%p -q jump_sa@178.124.206.53" -L 8019:127.0.0.1:80 root@192.168.202.19 -f -N
 1643  ssh -o ProxyCommand="ssh -W %h:%p -q jump_sa@178.124.206.53" -L 8020:127.0.0.1:80 root@192.168.202.20 -f -N
 1644  ansible -i inventory.yaml test.yaml -u root
 1645  ansible-inventory -i inventory.yaml test.yaml -u root
 1646  ansible-playbook -i inventory.yaml test.yaml -u root
 1647  git add --all
 1648  git commit -m "04.GitOps change to PR"
 1649  git push
 1650  ping pressfire.games
 1651  ansible-playbook -i inventory.yaml nginx.yaml -u root
 1652  git add --all
 1653  git commit -m "07. Ansible cruise"
 1654  git push origin_github 
 1655  git add --all
 1656  git commit -m "07. Ansible cruise"
 1657  git push
 1658  ssh jump_sa@178.124.206.53
 1659  git init
 1660  git remote add origin https://github.com/Luchik51/docker_build.git
 1661  git status
 1662  git add --all
 1663  git commit -m "09.Docker action"
 1664  git push
 1665  git push --set-upstream origin master
 1666  git branch -M main
 1667  git push -u origin main
 1668  git add README.md
 1669  git commit -m "first commit"
 1670  ls
 1671  git branch -M main
 1672  git remote add origin https://github.com/Luchik51/docker_build.git
 1673  git push -u origin main
 1674  git add --all
 1675  git commit -m "[200~name: Publish Docker image
 1676  on:
 1677    release:
 1678      types: [published]
 1679    push:
 1680      branches:
 1681        - "master"
 1682  jobs:
 1683    push_to_registries:
 1684      name: Push Docker image
 1685      runs-on: ubuntu-latest
 1686      permissions:
 1687        packages: write
 1688        contents: read
 1689      steps:
 1690        - name: Check out the repo
 1691          uses: actions/checkout@v2
 1692        - name: Log in to the Container registry
 1693          uses: docker/login-action@v1
 1694          with:
 1695            registry: ghcr.io
 1696            username: ${{ github.actor }}
 1697            password: ${{ secrets.DOCKER_TOKEN }}
 1698        - name: Build and push Docker images
 1699          uses: docker/build-push-action@v2
 1700          with:
 1701            context: .
 1702            push: true
 1703            tags: ghcr.io/luchik51/homework:2
 1704  git commit -m "09.Docker"
 1705  git push
 1706  docker build -t image:5 .
 1707  docker run -d -p 8080:8090 image:5
 1708  docker ps
 1709  docker ps -a
 1710  docker logs romantic_wilbur 
 1711  nano Dockerfile 
 1712  docker run -d -p 8080:8090 image:6
 1713  docker build -t image:6 .
 1714  docker run -d -p 8080:8090 image:6
 1715  docker ps -a
 1716  docker logs nice_cerf 
 1717  nano app/listener.py 
 1718  docker build -t image:7 .
 1719  docker run -d -p 8080:8090 image:6
 1720  docker ps -a
 1721  docker logs jolly_pascal 
 1722  nano app/listener.py 
 1723  docker build -t image:8 .
 1724  docker run -d -p 8080:8090 image:8
 1725  docker ps
 1726  docker login --username luchik
 1727  docker tag image:8 luchik/luchik/image
 1728  docker tag image:8 luchik/luchik:image
 1729  docker push luchik/luchik:image
 1730  docker tag image:8 luchik/homework:image
 1731  docker push luchik/homework:image
 1732  git add --all
 1733  git commit -m "09.Docker"
 1734  git push
 1735  git push origin_github 
 1736  git add --all
 1737  git commit -m "09.Docker test2"
 1738  git push origin_github 
 1739  git add --all
 1740  git commit -m "09.Docker test3"
 1741  git push origin_github 
 1742  git add --all
 1743  git commit -m "09.Docker test4"
 1744  git push origin_github 
 1745  git add --all
 1746  git commit -m "09.Docker test5"
 1747  git push origin_github 
 1748  git add --all
 1749  git commit -m "09.Docker test6"
 1750  git push origin_github 
 1751  git add --all
 1752  git commit -m "09.Docker tochka"
 1753  git push origin_github 
 1754  ping factor-ltd.com
 1755  nmap factor-ltd.com
 1756  curl factor-ltd.com
 1757  helm repo update
 1758  helm install web-drupal bitnami/drupal
 1759  curl https://raw.githubusercontent.com/helm/charts/master/stable/wordpress/values-production.yaml --output values-production.yaml
 1760  ls
 1761  helm update
 1762  helm remo update
 1763  helm version
 1764  helm repo update
 1765  curl https://raw.githubusercontent.com/helm/charts/master/stable/drupal/values.yaml --output values-drupal..yaml
 1766  history | grep ssh
 1767  ssh -o ProxyCommand="ssh -W %h:%p -q jump_sa@178.124.206.53" -L 6443:127.0.0.1:6443 root@192.168.203.20 -f -N
 1768  helm install helm install 
 1769  helm install db-madiadb
 1770  helm install db-madiadb --name mariadb
 1771  helm install db-madiadb mariadb
 1772  helm install db-mariadb helm_demo/dbmaridb --version v0.2.0
 1773  ansible-playbook -i inventory.yaml dbinstallandcleate.yaml
 1774  ansible-playbook -i inventory.yaml mariadb.yaml 
 1775  kubectl apply -f mariadb.yaml 
 1776  ansible-playbook -i inventory.yaml mariadb.yaml 
 1777  ansible-playbook -i inventory.yaml maridb_host20.yaml 
 1778  ansible-playbook -i inventory.yaml maridb_host20.yaml -u root
 1779  kubectl apply -f wpingress.yaml
 1780  kubectl apply -f dpingress.yaml
 1781  helm install my-wordpress --set mariadb.enabled=false,externalDatabase.host=192.168.202.20,externalDatabase.password=password,global.storageClass=nfs-client,wordpressPassword=password bitnami/wordpress
 1782  kubectl get secret --namespace default my-wordpress -o jsonpath="{.data.wordpress-password}" | base64 -d
 1783  helm install my-drupal --set mariadb.enabled=false,externalDatabase.host=192.168.202.20,externalDatabase.password=password,global.storageClass=nfs-client,drupalPassword=password bitnami/drupal
 1784  kubectl get secret --namespace default my-drupal -o jsonpath="{.data.drupal-password}" | base64 -d
 1785  sudo /etc/hosts
 1786  sudo nano /etc/hosts
 1787  ansible-playbook -i inventory.yaml maridb_host20.yaml -u root
 1788  helm install nfs-subdir-external-provisioner nfs-subdir-external-provisioner/nfs-subdir-external-provisioner --set nfs.server=192.168.37.105 --set nfs.path=/mnt/IT-Academy/nfs-data/sa2-21-22
 1789  ping 192.168.37.10
 1790  ping 192.168.37.3
 1791  history
 1792  history | ssh
 1793  history | grep ssh
 1794  ssh -o ProxyCommand="ssh -W %h:%p -q jump_sa@178.124.206.53" -L 6443:127.0.0.1:6443 root@192.168.203.20 -f -N
 1795  ssh -o ProxyCommand="ssh -W %h:%p -q jump_sa@178.124.206.53" -L 8019:127.0.0.1:80 root@192.168.202.19 -f -N
 1796  ssh -o ProxyCommand="ssh -W %h:%p -q jump_sa@178.124.206.53" -L 8020:127.0.0.1:80 root@192.168.202.20 -f -N
 1797  http://dp.k8s-20.sa/node
 1798  ansible -i inventory.yaml -m ping all_workers -u root
 1799  kubectl delete -f wordpess_ingress.yaml 
 1800  kubectl install -f wordpess_ingress.yaml 
 1801  helm delete sa-wordpress
 1802  helm install sa-wordpress --set mariadb.enabled=false,externalDatabase.host=192.168.203.8,externalDatabase.user=user_db,externalDatabase.password=pass_db,mariadb.auth.database=bitnami_wordpress,global.storageClass=nfs-client,wordpressUsername=admin,wordpressPassword=password bitnami/wordpress
 1803  helm install sa-wordpress --set mariadb.enabled=false,externalDatabase.host=192.168.203.20,externalDatabase.user=user_db,externalDatabase.password=pass_db,mariadb.auth.database=bitnami_wordpress,global.storageClass=nfs-client,wordpressUsername=admin,wordpressPassword=password bitnami/wordpress
 1804  helm delete sa-wordpress
 1805  helm install sa-wordpress --set mariadb.enabled=false,externalDatabase.host=192.168.203.20,externalDatabase.user=user_db,externalDatabase.password=pass_db,mariadb.auth.database=bitnami_wordpress,global.storageClass=nfs-client,wordpressUsername=admin,wordpressPassword=password bitnami/wordpress
 1806  helm delete my-wordpress
 1807  helm delete sa-wordpress
 1808  helm install my-wordpress --set mariadb.enabled=false,externalDatabase.host=192.168.203.20,externalDatabase.password=password,global.storageClass=nfs-client,wordpressUsername=admin,wordpressPassword=password bitnami/wordpress
 1809  helm delete my-wordpress
 1810  helm install sa-wordpress --set mariadb.enabled=false,externalDatabase.host=192.168.203.20,externalDatabase.user=bn_wordpress,externalDatabase.password=password,mariadb.auth.database=bitnami_wordpress,global.storageClass=nfs-client,wordpressUsername=admin,wordpressPassword=password bitnami/wordpress
 1811  helm delete my-wordpress
 1812  history | grep helm
 1813  helm install my-wordpress --set mariadb.enabled=false,externalDatabase.host=192.168.202.20,externalDatabase.password=password,global.storageClass=nfs-client,wordpressPassword=password bitnami/wordpress
 1814  helm delete sa-wordpress
 1815  kubectl apply -f wordpess_ingress.yaml 
 1816  kubectl exec --stdin --tty my-wordpress -- /bin/bash
 1817  kubectl exec my-wordpress
 1818  kubectl exec my-wordpress-5b64fc6f66-6pmvv 
 1819  kubectl exec my-wordpress-5b64fc6f66-6pmvv - /bin/bash
 1820  kubectl exec my-wordpress-5b64fc6f66-6pmvv --/bin/bash
 1821  kubectl exec my-wordpress-5b64fc6f66-6pmvv -- /bin/bash
 1822  kubectl exec my-wordpress-5b64fc6f66-6pmvv  -it sh -c -- env
 1823  kubectl exec my-wordpress-5b64fc6f66-6pmvv -it -- sh -c -- env
 1824  kubectl exec my-wordpress-5b64fc6f66-6pmvv -- mkdir /bitnami/wordpress/wp-content/themes
 1825  history
 1826  cd ../
 1827  git add --all
 1828  git commit -m "13.K8s"
 1829  git push
 1830  git push origin_github 
 1831  cd ../sa.it-academy.by/
 1832  git status
 1833  cd sa.it-academy.by/
 1834  git status
 1835  git add --all
 1836  git commit -m "13.K8s Helm"
 1837  git push
 1838  curl http://wp.k8s-20.sa
 1839  curl http://dp.k8s-20.sa/node
 1840  history | grep ansible
 1841  ansible -i inventory.yaml -m ping all_workers -u root
 1842  k9s
 1843  history | grep ssh
 1844  ssh -o ProxyCommand="ssh -W %h:%p -q jump_sa@178.124.206.53" -L 6443:127.0.0.1:6443 root@192.168.203.20 -f -N
 1845  ssh -o ProxyCommand="ssh -W %h:%p -q jump_sa@178.124.206.53" -L 8019:127.0.0.1:80 root@192.168.202.19 -f -N
 1846  ssh -o ProxyCommand="ssh -W %h:%p -q jump_sa@178.124.206.53" -L 8020:127.0.0.1:80 root@192.168.202.20 -f -N
 1847  k9s
 1848  kubectl apply -f grafana.yaml 
 1849  kubectl apply -f alertmanager.yaml 
 1850  grep ^ /etc/apt/sources.list /etc/apt/sources.list.d/*
 1851  rm /etc/apt/sources.list.d/remmina*
 1852  sudo rm /etc/apt/sources.list.d/remmina*
 1853  grep ^ /etc/apt/sources.list /etc/apt/sources.list.d/*
 1854  kubectl apply -f alertmanager.yaml 
 1855  sudo nano /etc/hosts
 1856  cat /etc/hosts
 1857  sudo nano /etc/hosts
 1858  kubectl apply -f alertmanager.yaml 
 1859  kubectl apply -f prometheus.yaml 
 1860  kubectl logs ci-cd/jenkins-7966854749-54r6j
 1861  kubectl logs jenkins-7966854749-54r6j
 1862  kubectl apply -f jenkins.yaml 
 1863  kubectl logs 
 1864  kubectl apply -f jenkins.yaml 
 1865  kubectl вудуеу jenkins.yaml 
 1866  kubectl delete jenkins.yaml 
 1867  kubectl delete jenkins
 1868  kubectl debug jenkins.yaml 
 1869  kubectl apply -f jenkins.yaml 
 1870  git status
 1871  git add --all
 1872  git commit -m "15.K8s.Monitoring"
 1873  git push
 1874  history | grep ssh
 1875  ssh -o ProxyCommand="ssh -W %h:%p -q jump_sa@178.124.206.53" -L 6443:127.0.0.1:6443 root@192.168.203.20 -f -N
 1876  cat /etc/hosts
 1877  kubectl apply -f prometheus.yaml 
 1878  kubectl delete deployment prometheus-deployment-5978c4f57-czxq7
 1879  kubectl delete deployment prometheus
 1880  kubectl delete pod prometheus-deployment-5978c4f57-czxq7
 1881  kubectl delete pod prometheus
 1882  kubectl apply -f prometheus.yaml 
 1883  kubectl get deployments --all-namespaces
 1884  kubectl delete deployment prometheus-deployment
 1885  kubectl delete pod prometheus-deployment --now 
 1886  kubectl delete -f prometheus.yaml 
 1887  kubectl apply -f prometheus.yaml 
 1888  kubectl delete -f prometheus.yaml 
 1889  kubectl apply -f prometheus.yaml 
 1890  kubectl delete -f prometheus.yaml 
 1891  kubectl apply -f prometheus.yaml 
 1892  kubectl delete -f prometheus.yaml 
 1893  kubectl apply -f prometheus.yaml 
 1894  kubectl delete -f prometheus.yaml 
 1895  kubectl apply -f prometheus.yaml 
 1896  kubectl delete -f prometheus.yaml 
 1897  kubectl apply -f prometheus.yaml 
 1898  git status
 1899  git add --all
 1900  git commit -m "15.K8s.Monitoring"
 1901  git push origin_github 
 1902  history | grep ssh
 1903  ssh -o ProxyCommand="ssh -W %h:%p -q jump_sa@178.124.206.53" -L 6443:127.0.0.1:6443 root@192.168.203.20 -f -N
 1904  git status
 1905  git add --all
 1906  git commit -m "14.k8s argoCD and Jenkins"
 1907  git push
 1908  exit
 1909  helm create jenkins-app
 1910  helm install jenkins-app
 1911  helm install jenkins-app --generate-name
 1912  helm delete jenkins-app --generate-name
 1913  helm delete jenkins-app
 1914  helm delete jenkins-app-1663012964
 1915  helm delete jenkins-app --generate-name
 1916  helm install jenkins-app --generate-name
 1917  helm delete jenkins-app --generate-name
 1918  helm delete jenkins-app-1663014024
 1919  helm install jenkins-app --generate-name
 1920  helm delete jenkins-app
 1921  helm delete jenkins-app-1663015009
 1922  helm install jenkins-app --generate-name
 1923  helm delete jenkins-app-1663015301
 1924  helm install jenkins-app --generate-name
 1925  sudo nano /etc/hosts
 1926  helm delete jenkins-app-1663015723
 1927  helm install jenkins-app --generate-name
 1928  helm delete jenkins-app-1663016026
 1929  helm install jenkins-app --generate-name
 1930  helm delete jenkins-app-1663016432
 1931  helm install jenkins-app --generate-name
 1932  helm delete jenkins-app-1663016547
 1933  helm install jenkins-app --generate-name
 1934  helm delete jenkins-app-1663016640
 1935  helm install jenkins-app --generate-name
 1936  history
 1937  kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d
 1938  git status
 1939  git add --all
 1940  git commit -m "14.K8s ArgoCD and Jenkins"
 1941  git push origin_github 
 1942  exit
 1943  k9s
 1944  exit
 1945  history | grep ssh
 1946  ssh -o ProxyCommand="ssh -W %h:%p -q jump_sa@178.124.206.53" -L 6443:127.0.0.1:6443 root@192.168.203.20 -f -N
 1947  history | grep ssh
 1948  ssh -o ProxyCommand="ssh -W %h:%p -q jump_sa@178.124.206.53" -L 6443:127.0.0.1:6443 root@192.168.203.20 -f -N
 1949  kubectl get pod
 1950  kubectl get ingress
 1951  kubectl get service
 1952  kubectl get ingress-nginx
 1953  ssh -o ProxyCommand="ssh -W %h:%p -q jump_sa@178.124.206.53" -L 6443:127.0.0.1:6443 root@192.168.203.20 -f -N
 1954  ps aux | grep ssh
 1955  kill 8450
 1956  kill 4911
 1957  ps aux | grep ssh
 1958  ssh -o ProxyCommand="ssh -W %h:%p -q jump_sa@178.124.206.53" -L 6443:127.0.0.1:6443 root@192.168.203.20 -f -N
 1959  k9s
 1960  git add --all
 1961  git commit -m "16. Log monitoring"
 1962  git push
 1963  git status
 1964  git add --all
 1965  git commit -m "16.K8s log monitoring"
 1966  git push origin_github 
 1967  git add --all
 1968  git commit -m "16.K8s log monitoring folder error"
 1969  git push origin_github 
 1970  git add --all
 1971  git commit -m "16.K8s log monitoring image error"
 1972  git push origin_github 
 1973  git add --all
 1974  git commit -m "16.K8s log monitoring image jenkins"
 1975  git push origin_github 
 1976  history | grep ssh
 1977  ssh -o ProxyCommand="ssh -W %h:%p -q jump_sa@178.124.206.53" -L 6443:127.0.0.1:6443 root@192.168.203.20 -f -N
 1978  ping 136.243.139.138
 1979  ping 88.198.68.197
 1980  ping 136.243.139.138
 1981  ping 88.198.100.148
 1982  sudo ufw status
 1983  ping 136.243.112.202
 1984  ip a
 1985  systemctl status networking
 1986  systemctl status network
 1987  ping 136.243.112.202
 1988  wget http://88.198.100.148/index2.html
 1989  ls -l
 1990  ping 136.243.112.219
 1991  ip a
 1992  vagrant up
 1993  ln -s /home/luchik/Downloads/Disk500/Вебинары/DevOps/ webinars
 1994  cp -rfp inventory/sample inventory/mycluster
 1995  git clone https://github.com/kubernetes-sigs/kubespray
 1996  cd kubespray
 1997  cp -rfp inventory/sample inventory/testcluster
 1998  declare -a IPS=(192.168.37.159)
 1999  CONFIG_FILE=inventory/testcluster/hosts.yaml python3 contrib/inventory_builder/inventory.py ${IPS[@]}
 2000  cat inventory/mycluster/group_vars/all/all.yml
 2001  cat inventory/testcluster/group_vars/all/all.yml
 2002  cat inventory/testcluster/group_vars/k8s_cluster/k8s-cluster.yml
 2003  ansible-playbook -i inventory/testcluster/hosts.yaml  --become --become-user=root cluster.yml
 2004  ansible-playbook -i inventory/testcluster/hosts.yaml  --become --become-user=root cluster.yml --ask-pass
 2005  ssh root@192.168.37.159
 2006  ansible-playbook -i inventory/testcluster/hosts.yaml  --become --become-user=ext-factor-ltd cluster.yml --ask-pass
 2007  ssh ext-factor-ltd@192.168.37.159
 2008  ansible-playbook -i inventory/testcluster/hosts.yaml  --become --become-user=ext-factor-ltd cluster.yml --ask-pass
 2009  ssh ext-factor-ltd@192.168.37.159
 2010  ssh root@192.168.37.159
 2011  ansible-playbook -i inventory/testcluster/hosts.yaml  --become --become-user=root cluster.yml --ask-pass
 2012  ansible -i ../inventory.yaml -m authorized_key -a "key=\"{{lookup('file','~/.ssh/id_rsa.pub')}}\" user=root" all_workers --ask-pass
 2013  cd ../
 2014  ansible -i inventory.yaml -m ping user=root" all_workers --ask-pass


 2015  ansible -i inventory.yaml -m ping user=root all_workers --ask-pass
 2016  ansible -i inventory.yaml -m ping -u root all_workers --ask-pass
 2017  ansible -i ../inventory.yaml -m authorized_key -a "key=\"{{lookup('file','~/.ssh/id_rsa.pub')}}\" user=root" all_workers -u root --ask-pass
 2018* ansible -i inventory.yaml -m authorized_key -a "key=\"{{lookup('file','~/.ssh/id_rsa.pub')}}\" user=root" all_workers -u rootass
 2019  ansible -i inventory.yaml -m ping -u root all_worker
 2020  ansible -i inventory.yaml -m ping -u root all_workers
 2021  cd kubespray
 2022  ansible-playbook -i inventory/testcluster/hosts.yaml  --become --become-user=root cluster.yml
 2023  ansible-playbook -i inventory/testcluster/hosts.yaml  -u root cluster.yml
 2024  history > history.txt


 ------

 1995  git clone https://github.com/kubernetes-sigs/kubespray
 1996  cd kubespray
 1997  cp -rfp inventory/sample inventory/testcluster
 1998  declare -a IPS=(192.168.37.159)
 1999  CONFIG_FILE=inventory/testcluster/hosts.yaml python3 contrib/inventory_builder/inventory.py ${IPS[@]}
 2000  cat inventory/mycluster/group_vars/all/all.yml
 2001  cat inventory/testcluster/group_vars/all/all.yml
 2002  cat inventory/testcluster/group_vars/k8s_cluster/k8s-cluster.yml
  2016  ansible -i inventory.yaml -m ping -u root all_workers --ask-pass
 2018* ansible -i inventory.yaml -m authorized_key -a "key=\"{{lookup('file','~/.ssh/id_rsa.pub')}}\" user=root" all_workers -u root
  2023  ansible-playbook -i inventory/testcluster/hosts.yaml  -u root cluster.yml
